<?xml version="1.0"?><phpdoc><class name="RbacAdmin" extends="PEAR" undoc="false" access="private" package="rbac"><file>/home/pgabriel/public_html/ilias3/classes/class.rbacAdmin.php</file><doc><author email="smeyer@databay.de">Stefan Meyer</author><description>core functions for role based access control</description><shortdescription>Class RbacAdmin</shortdescription><version>$Id$</version></doc><function name="RbacAdmin" undoc="false" access="public"><doc><parameter name="&amp;$dbhandle" undoc="true"/><return type="void"/><description/><shortdescription>Constructor</shortdescription></doc></function><function name="roleExists" undoc="false" access="public"><doc><parameter name="$a_title" type="string"/><return name="" type="array"/><description/><shortdescription>Checks if a role exists</shortdescription></doc></function><function name="addUser" undoc="false" access="public"><doc><parameter name="$a_data" type="array"/><return name="" type="bool">true /false</return><description/><shortdescription>Inserts userdata in user_data table</shortdescription></doc></function><function name="deleteUser" undoc="false" access="public"><doc><parameter name="$a_usr_id" type="array"/><return name="" type="boolean">true /false</return><description/><shortdescription>Deletes a user from object_data, rbac_pa, rbac_ua and user_data</shortdescription></doc></function><function name="updateUser" undoc="false" access="public"><doc><parameter name="$a_userdata" type="array">with user data</parameter><return name="" type="bool">true false</return><description/><shortdescription>updates user data in table user_data</shortdescription></doc></function><function name="addRole" undoc="false" access="public"><doc><parameter name="$a_title" type="string"/><parameter name="$a_description" type="string"/><return name="" type="int">new obj_id</return><description/><shortdescription>Creates a role, inserts data in object_data, rbac_ua, rbac_pa</shortdescription></doc></function><function name="deleteRole" undoc="false" access="public"><doc><parameter name="$a_obj_id" type="int">Id</parameter><return name="" type="bool">true /false</return><description/><shortdescription>Deletes a role and deletes entries in object_data, rbac_pa, rbac_templates, rbac_ua, rbac_fa</shortdescription></doc></function><function name="deleteLocalRole" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">Id of role</parameter><parameter name="$a_parent" type="int">of parent object</parameter><return name="" type="bool">true /false</return><description/><shortdescription>Deletes a local role and entries in rbac_fa and rbac_templates</shortdescription></doc></function><function name="getParentRoles" undoc="false" access="public"><doc><parameter name="$a_path" type="array">Id</parameter><parameter name="$a_child" type="string" undoc="true"/><return name="" type="bool">true /false</return><description/><shortdescription>Get parent roles in a path</shortdescription></doc></function><function name="assignUser" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id of role</parameter><parameter name="$a_usr_id" default="0" type="integer">id of user</parameter><return name="" type="bool">true /false</return><description/><shortdescription>Assigns a user to a role</shortdescription></doc></function><function name="deassignUser" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id of role</parameter><parameter name="$a_usr_id" type="int">id</parameter><return name="" type="bool">true /false</return><description/><shortdescription>Deassigns a user from a role</shortdescription></doc></function><function name="grantPermission" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id of role</parameter><parameter name="$a_ops_id" type="array">of operations</parameter><parameter name="$a_obj_id" type="int">id</parameter><parameter name="$a_setid" type="int">id of parent object</parameter><return name="" type="bool">true /false</return><description/><shortdescription>Grants permissions to an object</shortdescription></doc></function><function name="revokePermission" undoc="false" access="public"><doc><parameter name="$a_obj_id" type="int">id</parameter><parameter name="$a_rol_id" default="&amp;quot;&amp;quot;" type="string">id</parameter><parameter name="$a_set_id" default="&amp;quot;&amp;quot;" type="string">of parent object</parameter><return name="" type="bool">true /false</return><description/><shortdescription>Revokes permissions of object</shortdescription></doc></function><function name="getRolePermission" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id</parameter><parameter name="$a_type" type="string"/><parameter name="$a_parent" type="int"/><return name="" type="array">Operation ids</return><description/><shortdescription>Return template permissions of an role</shortdescription></doc></function><function name="copyRolePermission" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id source</parameter><parameter name="$a_from" type="int">id source</parameter><parameter name="$a_to" type="int">id destination</parameter><parameter name="$a_dest_rol_id" default="&amp;apos;&amp;apos;" type="string">id destination</parameter><return name="" type="bool"/><description/><shortdescription>Copies template permissions</shortdescription></doc></function><function name="deleteRolePermission" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id</parameter><parameter name="$a_parent" type="int">object id</parameter><return name="" type="bool"/><description/><shortdescription>Deletes a template</shortdescription></doc></function><function name="setRolePermission" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id</parameter><parameter name="$a_type" type="string"/><parameter name="$a_ops_id" type="array">ids</parameter><parameter name="$a_parent" type="object id"/><return name="" type="bool"/><description/><shortdescription>Inserts template permissions in rbac_templates</shortdescription></doc></function><function name="getSetIdByObject" undoc="false" access="public"><doc><parameter name="$a_obj_id" type="int">id</parameter><return name="" type="array">parent ids</return><description/><shortdescription>Returns parent id of an object (obsolete)</shortdescription></doc></function><function name="getRoleListByObject" undoc="false" access="public"><doc><parameter name="$a_parent" type="int">id</parameter><return name="" type="array">set ids</return><description/><shortdescription>Returns a list of roles in an container</shortdescription></doc></function><function name="assignRoleToFolder" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id of role</parameter><parameter name="$a_parent" type="object id"/><parameter name="$a_assign" default="&amp;apos;y&amp;apos;" type="string">(&amp;apos;y&amp;apos;,&amp;apos;n&amp;apos;)</parameter><return name="" type="bool"/><description/><shortdescription>Assigns a role to an role folder</shortdescription></doc></function><function name="isAssignable" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id</parameter><parameter name="$a_parent" type="int">id</parameter><return name="" type="bool"/><description/><shortdescription>Check if its possible to assign users</shortdescription></doc></function><function name="getRoleData" undoc="false" access="public"><doc><parameter name="$a_obj_id" type="int">id</parameter><return name="" type="array">array of set ids</return><description/><shortdescription>gets data of an role</shortdescription></doc></function><function name="getFoldersAssignedToRole" undoc="false" access="public"><doc><parameter name="$a_rol_id" type="int">id</parameter><return name="" type="array">object ids of role folders</return><description/><shortdescription>returns an array with role ids assigned to a role folder</shortdescription></doc></function><function name="getRolesAssignedToFolder" undoc="false" access="public"><doc><parameter name="$a_parent" type="int">id</parameter><return name="" type="array">Array with rol_ids</return><description/><shortdescription>return an array with role ids</shortdescription></doc></function><function name="getRoleFolder" undoc="false" access="public"><doc><return name="" type="array"/><description/><shortdescription>all role folder ids</shortdescription></doc></function><function name="getRoleFolderOfObject" undoc="false" access="public"><doc><parameter name="$a_parent" type="int">id</parameter><return name="" type="array"/><description/><shortdescription>returns the data of a role folder assigned to an object</shortdescription></doc></function><function name="getParentObject" undoc="false" access="public"><doc><parameter name="$a_child" type="int"/><return name="" type="int"/><description/><shortdescription>return id of parent object</shortdescription></doc></function><function name="getOperationsOnType" undoc="false" access="public"><doc><parameter name="$a_typ_id" type="int"/><return name="" type="array"/><description/><shortdescription>all possible operations of a type</shortdescription></doc></function><variable name="$db" access="private" type="unknown"><doc></doc></variable><variable name="$error_class" access="private" type="unknown"><doc></doc></variable><subclasses><subclass>RbacAdminH</subclass></subclasses></class></phpdoc>