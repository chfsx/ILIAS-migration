<?php
/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see docs/LICENSE */

include_once 'Services/Mail/classes/class.ilMailNotification.php';
include_once 'Services/Mail/classes/class.ilMimeMail.php';

/**
*
* @author Jörg Lützenkirchen <luetzenkirchen@leifos.com>
* @version $Id:$
* @package ilias
*/
class ilCronCourseGroupNotification extends ilMailNotification
{	
	public function sendNotifications()
	{
		global $ilDB, $tree;

		// gather objects and participants with notification setting
		$objects = array();
		$set = $ilDB->query("SELECT usr_id,keyword FROM usr_pref".
			" WHERE ".$ilDB->like("keyword", "text", "grpcrs_ntf_%").
			" AND value = ".$ilDB->quote("1", "text"));
		while($row = $ilDB->fetchAssoc($set))
		{
			$ref_id = substr($row["keyword"], 11);
			$type = ilObject::_lookupType($ref_id, true);
			if($type)
			{
				$objects[$type][$ref_id][] = $row["usr_id"];
			}
		}

		if(sizeof($objects))
		{
			include_once "Services/News/classes/class.ilNewsItem.php";
			foreach($objects as $type => $ref_ids)
			{
				// type is not needed for now
				foreach($ref_ids as $ref_id => $user_ids)
				{
					// gather news per object
					$news_item = new ilNewsItem();
					if($news_item->checkNewsExistsForGroupCourse($ref_id))
					{
						foreach($user_ids as $user_id)
						{
							// gather news for user
							$user_news = $news_item->getNewsForRefId($ref_id,
								false, false, 1, true, false, false, false,
								$user_id);
							if($user_news)
							{
								$this->sendMail($user_id, $ref_id, $user_news);
							}
						}
					}
				}
			}
		}

		return true;
	}

	/**
	 * Send news mail for 1 object and 1 user
	 *
	 * @param int $a_user_id
	 * @param int $a_ref_id
	 * @param array $news
	 */
	public function sendMail($a_user_id, $a_ref_id, array $news)
	{
		global $ilDB, $lng, $ilSetting;

		$obj_id = ilObject::_lookupObjId($a_ref_id);
		$obj_type = ilObject::_lookupType($obj_id);

		$this->initLanguage($a_user_id);
		$this->initMail();

		$this->setRecipients($a_user_id);
		$this->setSubject($this->getLanguageText('subject_course_group_notification'));

		$this->setBody(ilMail::getSalutation($a_user_id, $this->getLanguage()));
		$this->appendBody("\n\n");

		$this->appendBody($lng->txt("intro_course_group_notification_for").": ".
			$lng->txt($obj_type)." \"".ilObject::_lookupTitle($obj_id)."\"");
		$this->appendBody("\n\n");

		// ilDatePresentation::setUseRelativeDates(false);

		// news summary
		$counter = 1;
		foreach($news as $item)
		{
			$this->appendBody("----------------------------------------------------------------------------------------------");
			$this->appendBody("\n\n");
			$this->appendBody('#'.$counter."\n\n");
			$this->appendBody($lng->txt('title').": ".$item['title']);
			$this->appendBody("\n");
			$this->appendBody($lng->txt('content').": ".$item['content']);
			/* $this->appendBody("\n");
			$this->appendBody($lng->txt('date').": ".
				ilDatePresentation::formatDate(new ilDate($item['creation_date'], IL_CAL_DATETIME))); */
			$this->appendBody("\n\n");

			++$counter;
		}
		$this->appendBody("----------------------------------------------------------------------------------------------");
		$this->appendBody("\n\n");

		// link to object
		$this->appendBody($lng->txt('course_group_notification_link'));
		$this->appendBody("\n");
		$object_link = ilUtil::_getHttpPath();
		$object_link .= "/goto.php?target=".$obj_type."_".$a_ref_id.
			"&client_id=".CLIENT_ID;
		$this->appendBody($object_link);

		$this->appendBody("\n\n");
		$this->appendBody(ilMail::_getAutoGeneratedMessageString($this->getLanguage()));
		$this->appendBody(ilMail::_getInstallationSignature());

		$mmail = new ilMimeMail();
		$mmail->autoCheck(false);
		$mmail->From('noreply');
		$mmail->To(ilObjUser::_lookupEmail($a_user_id));

		$mmail->Subject($this->getSubject());
		$mmail->Body($this->getBody());
		$mmail->Send();
	}
}
?>
